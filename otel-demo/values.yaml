# Default values for otel-demo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Global settings
global:  
  image:
    registry: ghcr.io/martinmclarnon
    tag: latest
    pullPolicy: IfNotPresent
  ad_port: 9555
  kafkaAddr: kafka:9092
  flagd_host: flagd
  flagd_port: 8013
  otel_collector_host: coralogix-opentelemetry-collector
  otel_collector_port_grpc: 4317
  otel_collector_port_http: 4318
  public_otel_exporter_otlp_traces_endpoint: http://localhost:8080/otlp-http/v1/traces
  otel_resource_attributes: service.namespace=opentelemetry-demo,service.version=2.0.0
  otel_exporter_otlp_metrics_temporality_preference: cumulative

# Accounting Service
accounting:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-accounting
  resources:
    limits:
      memory: 512Mi

# ad Service
ad:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-ad
  resources:
    limits:
      memory: 512Mi

# Cart Service
cart:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-cart
  resources:
    limits:
      memory: 512Mi

# Checkout Service
checkout:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-checkout
  resources:
    limits:
      memory: 512Mi

# Currency Service
currency:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-currency
  resources:
    limits:
      memory: 512Mi

# Email Service
email:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-email
  resources:
    limits:
      memory: 512Mi

# Fraud Detection Service
fraudDetection:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-fraud-detection
  resources:
    limits:
      memory: 512Mi

# Frontend Service
frontend:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-frontend
  resources:
    limits:
      memory: 250Mi
  port: 8080 # or ${FRONTEND_PORT}, if defined globally
  env:
    PORT: "8080"
    FRONTEND_ADDR: "frontend:8080"
    AD_ADDR: "ad:8080"
    CART_ADDR: "cart:8080"
    CHECKOUT_ADDR: "checkout:8080"
    CURRENCY_ADDR: "currency:8080"
    PRODUCT_CATALOG_ADDR: "product-catalog:8080"
    RECOMMENDATION_ADDR: "recommendation:8080"
    SHIPPING_ADDR: "shipping:8080"
    QUOTE_ADDR: "quote:8080"
    EMAIL_ADDR: "email:8080"
    PAYMENT_ADDR: "payment:8080"
    FRAUD_DETECTION_ADDR: "fraud-detection:8080"  
  rum:
    enabled: false
    env:
    CORALOGIX_RUM_ENABLE: "false"
    CORALOGIX_RUM_ENV: "<YOUR_SUBSYSTEM_NAME>"
    CORALOGIX_RUM_APP: "<YOUR_APPLICATION_NAME>"
    CORALOGIX_RUM_KEY: "<YOUR_CORALOGIX_KEY>"
    CORALOGIX_RUM_DOMAIN: "<YOUR_CORALOGIX_DOMAIN>"
    CORALOGIX_RUM_VERSION: "<YOUR_CORALOGIX_VERSION>"
    CORALOGIX_RUM_SDK_URL: "<YOUR_CORALOGIX_SDK_URL>"
    CORALOGIX_RUM_USER_EMAIL: "<YOUR_CORALOGIX_USER_EMAIL>"
    CORALOGIX_RUM_USER_NAME: "<YOUR_CORALOGIX_USER_NAME>"
    CORALOGIX_RUM_USER_ID: "<YOUR_CORALOGIX_USER_ID>"

# Frontend Proxy Service
frontendProxy:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-frontend-proxy
  resources:
    limits:
      memory: 100Mi

# Image Provider Service√ç
imageProvider:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-image-provider
  resources:
    limits:
      memory: 512Mi

# Load Generator Service
loadGenerator:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-load-generator
  resources:
    limits:
      memory: 512Mi

# Payment Service
payment:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-payment
  resources:
    limits:
      memory: 512Mi

# Product Catalog Service
productCatalog:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-product-catalog
  resources:
    limits:
      memory: 512Mi

# Quote Service
quote:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-quote
  resources:
    limits:
      memory: 512Mi

# Recommendation Service
recommendation:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-recommendation
  resources:
    limits:
      memory: 512Mi

# Shipping Service
shipping:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-shipping
  resources:
    limits:
      memory: 512Mi

# Flagd UI Service
flagdUi:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-flagd-ui
  resources:
    limits:
      memory: 512Mi

# Kafka Service
kafka:
  replicaCount: 1
  image:
    name: opentelemetry-demo-cx-rum-kafka
  resources:
    limits:
      memory: 768Mi

# Valkey Cart Service
valkeyCart:
  replicaCount: 1
  image:
    name: valkey/valkey:8.0-alpine
  resources:
    limits:
      memory: 512Mi
