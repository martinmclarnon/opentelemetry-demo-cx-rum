# file: .github/workflows/docker-publish.yaml
#  This workflow builds and pushes Docker images for the OpenTelemetry demo CX RUM application
#  whenever changes are pushed to the main branch, specifically in the 'src' directory or
#  the workflow file itself.
#  It uses the GitHub Container Registry (GHCR) for storing the images.
#  The images are built with a specific OpenTelemetry Java agent version and pushed with the 'latest' tag.
#  The workflow is triggered on pushes to the main branch and monitors changes in the specified paths
name: Build and Push Images to GHCR

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/docker-publish.yaml'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_PREFIX: ghcr.io/${{ github.repository }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag from Git ref (if versioned tag)
        id: extract-tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "::set-output name=TAG::${GITHUB_REF#refs/tags/}"
          else
            echo "::set-output name=TAG::latest"
          fi

      - name: Detect changed services and build/push
        run: |
          IMAGES="accounting ad cart checkout currency email fraud-detection frontend frontend-proxy image-provider load-generator quote product-catalog recommendation shipping kafka flagd-ui"
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          TAG="${{ steps.extract-tag.outputs.TAG }}"

          for IMAGE in $IMAGES; do
            if echo "$CHANGED" | grep -q "^src/$IMAGE/"; then
              echo "üî® Building and pushing $IMAGE (changed) as tag $TAG..."
              docker build \
                --build-arg OTEL_JAVA_AGENT_VERSION=1.34.0 \
                -t ghcr.io/martinmclarnon/opentelemetry-demo-cx-rum-$IMAGE:$TAG \
                -f src/$IMAGE/Dockerfile . \
                && docker push ghcr.io/martinmclarnon/opentelemetry-demo-cx-rum-$IMAGE:$TAG;
            else
              echo "‚è≠Ô∏è Skipping $IMAGE (no changes)"
            fi
          done
